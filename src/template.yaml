AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-create-name

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON

Resources:
  StoreNameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: store_name/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
      - x86_64
      Events:
        NameApiGateway:
          Type: Api
          Properties:
            Path: /name
            Method: post
      Policies: []

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
        
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

  DynamoDBFullAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DynamoDBFullAccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:Scan
            Resource: arn:aws:dynamodb:eu-central-1:541128407328:table/NamePerCity
      Roles:
        - !GetAtt StoreNameFunctionRole.Arn

Outputs:
  StoreNameFunction:
    Description: Store Name By City Lambda Function ARN
    Value: !GetAtt StoreNameFunction.Arn
  StoreNameFunctionIamRole:
    Description: Implicit IAM Role created for Store Name function
    Value: !GetAtt StoreNameFunctionRole.Arn